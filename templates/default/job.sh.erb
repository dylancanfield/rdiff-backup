#!/bin/bash

# rdiff-backup job script for <%= @fqdn %>:<%= @src %> managed by Chef. Changes will be overwritten.

# This script is normally run by cron, but can be run manually to start the job if it is not already running.

PIDFILE=".`basename ${0}`.lock"
DIR=`dirname ${BASH_SOURCE[0]}`
JOB=`basename ${0%%".sh"}`
LOGPATH='/var/log/rdiff-backup'


# Prepends date to every line of stdin, then writes to both stdout and the log file.
function log() {
  sed "s/^/[`date +'%Y-%m-%d %H:%M:%S'`] /" | tee >(/usr/sbin/cronolog "${LOGPATH}/${JOB}/%Y-%m.log")
}

# Prepends date to every line of stdin, then writes to stdout and both the individual and general log files.
function logboth() {
  sed "s/^/[`date +'%Y-%m-%d %H:%M:%S'`] /" | tee >(/usr/sbin/cronolog "${LOGPATH}/${JOB}/%Y-%m.log") >(/usr/sbin/cronolog "${LOGPATH}/general/%Y-%m-%d.log" -S "${LOGPATH}/current.log" -P "${LOGPATH}/previous.log")
}

# If we're root instead of the rdiff-backup server user, rerun the script as it.
if [ `whoami` = 'root' ]; then
  su <%= @suser %> -c $0
else

  # Only run if the pidfile doesn't exist (or exists, but contains a pid that isn't running)
  if [ ! -e $PIDFILE ] || ! cat $PIDFILE | xargs ps -a | grep basename $0 > /dev/null; then
    echo $$ > $PIDFILE

    echo '----------------------------------------' | log

    echo 'Backup starting for "<%= @fqdn %>:<%= @src %>"...' | logboth
    rdiff-backup <%= @args %> --force --create-full-path --exclude-device-files \
      --exclude-fifos --exclude-sockets --exclude-other-filesystems \
      --exclude-globbing-filelist "${DIR}/../exclude/<%= @fqdn %>_<%= @src.gsub('/', '-') %>" \
      --remote-schema 'ssh -tCp <%= @port %> -o StrictHostKeyChecking=no %s sudo rdiff-backup --server --restrict-read-only /' '<%= @cuser %>@<%= @fqdn %>::<%= @src %>' '<%= @dest %>' 2>&1 | log
    if [ ${PIPESTATUS[0]} -eq 0 ]; then
      echo 'Backup complete for "<%= @fqdn %>:<%= @src %>".' | logboth
    else
      echo 'Backup failed for "<%= @fqdn %>:<%= @src %>".' | logboth
    fi

    echo 'Purging backups older than <%= @period %> for "<%= @fqdn %>:<%= @src %>"...' | logboth
    rdiff-backup --force --remove-older-than <%= @period %> '<%= @dest %>' 2>&1 | log
    if [ ${PIPESTATUS[0]} -eq 0 ]; then
      echo 'Purge complete for "<%= @fqdn %>:<%= @src %>".' | logboth
    else
      echo 'Purge failed for "<%= @fqdn %>:<%= @src %>".' | logboth
    fi

    rm $PIDFILE

  else
    echo 'Job already running for "<%= @fqdn %>:<%= @src %>"; terminating.' | logboth
  fi

fi
